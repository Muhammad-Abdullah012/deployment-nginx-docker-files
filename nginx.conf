# Define the number of worker processes (1 per CPU core is recommended).
worker_processes 1;

events {
    # Set the maximum number of simultaneous connections per worker process.
    worker_connections 1024;
}

http {
    # Include MIME types configuration for proper content handling.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on; # Turn on Gzip compression.
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000; # Only compress files larger than 1KB.
    gzip_comp_level 6; # Compression level (1-9), where 6 is a good balance between speed and compression.
    gzip_vary on; # Add "Vary: Accept-Encoding" header to inform caching proxies.
    server_tokens off;
    sendfile on;
    keepalive_timeout 65;
    # Redirect all HTTP traffic to HTTPS for enhanced security.
    server {
        listen 80; # Listen on port 80 for HTTP requests.
        server_name _;

        location /.well-known/acme-challenge/ {
        	root /etc/nginx;
	        try_files $uri =404;
    	}

	    # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }        
    }

    # Define an upstream server for the API backend (Node.js container).
    # The container name "ride-darker" must match the service name in docker-compose.yaml.
    upstream api-server {
        server ride-darker:3000; # Docker container name (in the same network).
        keepalive 100; # Maintain persistent connections to improve performance.
    }

    # HTTPS server configuration for the static site (abdullah.weinnovate.net).
    server {
        listen 443 ssl; # Listen on port 443 for HTTPS requests.
        http2 on;
        server_name abdullah.weinnovate.net;

        # SSL certificate and key paths (mapped from the host machine via docker-compose.yaml).
        ssl_certificate /etc/letsencrypt/live/abdullah.weinnovate.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/abdullah.weinnovate.net/privkey.pem;

        # Serve static HTML files for the frontend.
        location / {
            root /usr/share/nginx/html/abdullah/dist; # Static files directory.
            index index.html; # Default file to serve.
        }
    }

    # HTTPS server configuration for the dynamic Node.js application (ridedarker.weinnovate.net).
    server {
        listen 443 ssl; # Listen on port 443 for HTTPS requests.
        http2 on;
        server_name ridedarker.weinnovate.net;

        # SSL certificate and key paths (mapped from the host machine via docker-compose.yaml).
        ssl_certificate /etc/letsencrypt/live/ridedarker.weinnovate.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ridedarker.weinnovate.net/privkey.pem;

        # Proxy requests to the Node.js backend (api-server).
        location / {
            proxy_http_version 1.1; # Use HTTP/1.1 for proxying.
            proxy_pass http://api-server/; # Forward requests to the upstream server.
            proxy_set_header Host $host; # Pass the original host header.
            proxy_set_header X-Real-IP $remote_addr; # Pass the client's real IP address.
            proxy_set_header Upgrade $http_upgrade; # Support WebSocket upgrades.
            proxy_set_header Connection 'upgrade'; # Maintain WebSocket connections.
            proxy_cache_bypass $http_upgrade; # Bypass caching for WebSocket traffic.
        }
    }
}
